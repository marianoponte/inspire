[{"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\index.js":"1","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\reportWebVitals.js":"2","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\App.js":"3","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\pages\\NotFound.js":"4","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\layouts\\NavbarMain.js":"5","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\pages\\Login.js":"6","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\pages\\Home.js":"7","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\pages\\Register.js":"8","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\Utils\\utils.js":"9","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\transactions\\AddTransaction.js":"10","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\transactions\\EditTransaction.js":"11","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\transactions\\SearchTransaction.js":"12","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\products\\Producto.js":"13","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\products\\ProductsTable.js":"14","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\canje\\Canje.js":"15","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\utils\\Utils.js":"16","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\transactions\\TransactionsTab.js":"17","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\transactions\\TransactionsTable.js":"18","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\pages\\LogOut.js":"19","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\AddMember.js":"20","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\EditMember.js":"21","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\MembersTable.js":"22","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\MemberTransactions.js":"23","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\MemberTrades.js":"24","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\SearchMember.js":"25","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\vouchers\\VouchersTable.js":"26","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\vouchers\\VouchersTab.js":"27","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\MemberVouchers.js":"28","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\vouchers\\EditVoucher.js":"29"},{"size":517,"mtime":1614066141530,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1613514360404,"results":"32","hashOfConfig":"31"},{"size":1863,"mtime":1614106293505,"results":"33","hashOfConfig":"31"},{"size":1613,"mtime":1614073455747,"results":"34","hashOfConfig":"31"},{"size":2013,"mtime":1613965091529,"results":"35","hashOfConfig":"31"},{"size":3652,"mtime":1614114090498,"results":"36","hashOfConfig":"31"},{"size":3588,"mtime":1614073621888,"results":"37","hashOfConfig":"31"},{"size":4890,"mtime":1614114401807,"results":"38","hashOfConfig":"31"},{"size":137,"mtime":1613897765531,"results":"39","hashOfConfig":"31"},{"size":6651,"mtime":1614059679950,"results":"40","hashOfConfig":"31"},{"size":3716,"mtime":1614104925166,"results":"41","hashOfConfig":"31"},{"size":423,"mtime":1613792353387,"results":"42","hashOfConfig":"31"},{"size":800,"mtime":1613968394955,"results":"43","hashOfConfig":"31"},{"size":1259,"mtime":1613976212966,"results":"44","hashOfConfig":"31"},{"size":4606,"mtime":1614074439755,"results":"45","hashOfConfig":"31"},{"size":137,"mtime":1613897765531,"results":"46","hashOfConfig":"31"},{"size":1575,"mtime":1614058112365,"results":"47","hashOfConfig":"31"},{"size":1351,"mtime":1614058080633,"results":"48","hashOfConfig":"31"},{"size":858,"mtime":1613946866114,"results":"49","hashOfConfig":"31"},{"size":4052,"mtime":1613961891400,"results":"50","hashOfConfig":"31"},{"size":8481,"mtime":1614075886589,"results":"51","hashOfConfig":"31"},{"size":3866,"mtime":1613976136381,"results":"52","hashOfConfig":"31"},{"size":771,"mtime":1613890835424,"results":"53","hashOfConfig":"31"},{"size":799,"mtime":1613942428537,"results":"54","hashOfConfig":"31"},{"size":413,"mtime":1613792363577,"results":"55","hashOfConfig":"31"},{"size":1499,"mtime":1614105161219,"results":"56","hashOfConfig":"31"},{"size":1074,"mtime":1613976368156,"results":"57","hashOfConfig":"31"},{"size":710,"mtime":1613974090417,"results":"58","hashOfConfig":"31"},{"size":3587,"mtime":1614105006053,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"14sosci",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"62"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"62"},"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\index.js",[],["137","138"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\reportWebVitals.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\App.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\pages\\NotFound.js",["139","140","141","142","143"],"import React, { useEffect } from 'react';\r\nimport '../../stylesheets/notfound.css';\r\n\r\nconst NotFound = () => {\r\n\r\n    useEffect(() => {\r\n        document.getElementById('navigation-bar').style.display = \"none\"; }, [])\r\n    return (\r\n        <body class=\"bg-purple\">\r\n            <div class=\"stars\">\r\n                <div class=\"central-body\">\r\n                    <img class=\"image-404\" src=\"http://salehriaz.com/404Page/img/404.svg\" width=\"300px\" />\r\n                    <a href=\"/home\" class=\"btn-go-home\">VOLVER AL INICIO</a>\r\n                </div>\r\n                <div class=\"objects\">\r\n                    <img class=\"object_rocket\" src=\"http://salehriaz.com/404Page/img/rocket.svg\" width=\"40px\" />\r\n                    <div class=\"earth-moon\">\r\n                        <img class=\"object_earth\" src=\"http://salehriaz.com/404Page/img/earth.svg\" width=\"100px\" />\r\n                        <img class=\"object_moon\" src=\"http://salehriaz.com/404Page/img/moon.svg\" width=\"80px\" />\r\n                    </div>\r\n                    <div class=\"box_astronaut\">\r\n                        <img class=\"object_astronaut\" src=\"http://salehriaz.com/404Page/img/astronaut.svg\" width=\"140px\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"glowing_stars\">\r\n                    <div class=\"star\"></div>\r\n                    <div class=\"star\"></div>\r\n                    <div class=\"star\"></div>\r\n                    <div class=\"star\"></div>\r\n                    <div class=\"star\"></div>\r\n                </div>\r\n            </div>\r\n        </body>\r\n    );\r\n};\r\n\r\nexport default NotFound;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\layouts\\NavbarMain.js",["144","145","146"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LogOut from '../pages/LogOut';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst NavbarMain = () => {\r\n\r\n    const [admin, setAdmin] = useState(true)\r\n\r\n    /*\r\n    useEffect(() => {\r\n        var token = localStorage.getItem('token')\r\n        var member = jwt_decode(token)\r\n        var permiso = member.permiso\r\n        setAdmin(permiso==\"Admin\")\r\n        },[]) */\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\" id=\"navigation-bar\">\r\n            <Link className=\"navbar-brand\" exact to=\"/home\">Inspire</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"> </span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" exact to=\"/home\">Home</Link>\r\n                    </li>\r\n                    {admin && <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" exact to=\"/members\">Miembros</Link>\r\n                    </li>}\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" exact to=\"/vouchers\">Vouchers</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" exact to=\"/transactions\">Transacciones</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" exact to=\"/products\">Productos</Link>\r\n                    </li>\r\n                </ul>\r\n                <LogOut />\r\n            </div>\r\n        </nav>);\r\n};\r\n\r\nexport default NavbarMain;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\pages\\Login.js",["147","148"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\pages\\Home.js",["149","150"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwt_decode from 'jwt-decode';\r\nimport CODIGO_HTTP from '../../utils/Utils'\r\nimport swal from 'sweetalert';\r\nimport {Spinner} from 'reactstrap';\r\n\r\nconst Home = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [info, setInfo] = useState({\r\n        nombre: \"\",\r\n        apellido: \"\",\r\n        puntos: \"\"\r\n    });\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const getMember = async (email) => {\r\n        let response = await fetch(`http://localhost:5000/members?email=${email}`, {\r\n            method: \"GET\"\r\n        });\r\n        response = await response.json();\r\n        console.log(response)\r\n        setLoading(false)\r\n        if (response.code == CODIGO_HTTP.OK) {\r\n            console.log(\"Miembro filtrado: \", response.miembros[0])\r\n            return response.miembros[0]\r\n        } else {\r\n            swal(\"Error\", response.mensaje, \"error\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            var token = localStorage.getItem('token')\r\n            var member = jwt_decode(token);\r\n            getMember(member.email)\r\n                .then(r => {\r\n                    setInfo({\r\n                        nombre: r.nombre,\r\n                        apellido: r.apellido,\r\n                        puntos: r.puntos\r\n                    })\r\n                })\r\n        } else {\r\n            return history.push('/login');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {(!loading) ? \r\n        <div>\r\n            <div className=\"jumbotron\">\r\n                <div className=\"container\">\r\n                <h1 className=\"display-3\">Bienvenido {info.nombre} {info.apellido}!</h1>\r\n                <h1>Tenes <strong>{info.puntos}</strong> Puntos</h1>\r\n                </div> \r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\"> \r\n                        <h2>Programa de lealtad</h2>\r\n                        <p>Queremos que tengas una experiencia positiva y recompensarte a vos y a los clientes que compran o se comprometen con la marca una y otra vez.</p>\r\n                        <div className=\"align-items-center text-center d-flex\"><i class=\"fa fa-cart-plus fa-3x  mx-auto d-flex\" aria-hidden=\"true\"></i></div>\r\n                    </div>\r\n                    <div className=\"col-md-4\"> \r\n                        <h2>Puntos</h2>\r\n                        <p>Se te asignaron 500 puntos al momento de registrarte y además por cada $1 gastado, en compras con nosotros, obtendrás 0.5 puntos que se irán acumulando ¡sin límite!</p>\r\n                        <div className=\"align-items-center text-center d-flex\"><i className=\"fa fa-money fa-3x  mx-auto d-flex\" aria-hidden=\"true\"></i></div>\r\n                    </div>\r\n                    <div className=\"col-md-4 align-items-center\"> \r\n                        <h2>Canjes</h2>\r\n                        <p>¡Podrás canjear los puntos acumulados por cualquier producto de nuestro catálogo! Recibirás un voucher con un código único y con 30 días de validación.</p>\r\n                        <div className=\"align-items-center text-center d-flex\"><i className=\"fa fa-cart-arrow-down fa-3x mx-auto d-flex\"></i></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            : <div className=\"spinner-center\"><Spinner color=\"primary\"/></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\pages\\Register.js",["151","152","153","154"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\Utils\\utils.js",[],["155","156"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\transactions\\AddTransaction.js",["157","158","159","160"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Spinner } from 'reactstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CODIGO_HTTP from '../../utils/Utils';\r\nimport swal from 'sweetalert';\r\n\r\nconst AddTransaction = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [members, setMembers] = useState([])\r\n  \r\n    useEffect(() => {\r\n      if (!localStorage.getItem('token')) {\r\n        return history.push('/login'); }\r\n    else {\r\n        getMembers();\r\n        console.log(\"Miembros: \", members)\r\n        } }, [])\r\n  \r\n    const [modal, setModal] = useState(false);\r\n  \r\n    const [transaction, setTransaction] = useState({ \r\n        tipo: \"\",\r\n        monto: \"\",\r\n        id_miembro: \"\",\r\n        descripcion: \"\",\r\n        puntos: \"\"\r\n    });\r\n  \r\n    const cleanForm = () => { setTransaction({      \r\n        tipo: \"\",\r\n        monto: \"\",\r\n        id_miembro: \"\",\r\n        descripcion: \"\",\r\n        puntos: \"\"\r\n    })}\r\n\r\n    const getMembers = async () => {\r\n        let response = await fetch('http://localhost:5000/members', {\r\n            method: \"GET\"\r\n        });\r\n\r\n        response = await response.json();\r\n        console.log(\"Response: \", response);\r\n        setMembers(response.miembros);\r\n    }\r\n  \r\n    const toggle = () => {\r\n        cleanForm();\r\n        setModal(!modal);\r\n    }\r\n  \r\n    const onSubmit = async () => {\r\n        if (!tipo) {\r\n            return swal(\"Error\", \"Se tiene que completar el campo tipo!\", \"error\")\r\n        }\r\n        generateTransaction().then(transaccion => { toggle();\r\n                    console.log(transaccion)\r\n                   getMember(transaccion).then(\r\n                       member => {updateMemberPoints(member, transaccion).then(() => swal(\"Bien!\", \"Se ha generado la transacción con éxito\", \"success\").then(() => window.location.reload()) )})\r\n            })\r\n    } \r\n\r\n  const getMember = async (r) => {\r\n      console.log(r)\r\n      var id_miembro = r.miembro.id\r\n    console.log(id_miembro)\r\n    let response = await fetch(`http://localhost:5000/members/${id_miembro}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }})\r\n        response = await response.json();\r\n        if (response.code == CODIGO_HTTP.OK) {\r\n            console.log(\"Miembro filtrado: \", response.miembro)\r\n            return response.miembro\r\n        } else {\r\n            swal(\"Error\", response.mensaje, \"error\")\r\n        }\r\n}\r\n\r\n    const generateTransaction = async () => {\r\n        let response = await fetch('http://localhost:5000/transactions', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(transaction)\r\n    })\r\n        console.log(JSON.stringify(transaction))\r\n        response = await response.json();\r\n        console.log(response)\r\n        if (response.code == CODIGO_HTTP.CREATED) {\r\n            return response.transaccion \r\n        } else {\r\n            swal(\"Error\", \"No se pudo crear la tranacción\", \"error\")\r\n        }   \r\n    }\r\n\r\n    const updateMemberPoints = async (member, transaction) => {\r\n        console.log(\"Puntos para actualizar: \", transaction.puntos)\r\n\r\n        var payload = {\r\n            nombre: member.nombre,\r\n            apellido: member.apellido,\r\n            email: member.email,\r\n            fecha_de_nacimiento: member.fecha_de_nacimiento,\r\n            estado: member.estado,\r\n            comentario: member.comentario,\r\n            puntos: member.puntos + transaction.puntos\r\n        }\r\n        console.log(payload)\r\n        let response = await fetch(`http://localhost:5000/members/${member.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)})\r\n\r\n        console.log(JSON.stringify(payload))\r\n        console.log(JSON.stringify(response))\r\n    }\r\n    \r\n    const { tipo, monto, id_miembro, descripcion } = transaction;\r\n      \r\n    const onInputChange = e => {\r\n        setTransaction({...transaction, [e.target.name]: e.target.value})\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"btn btn-primary btn-add\" color=\"btn btn-primary\" onClick={toggle}>Crear Transacción</Button>\r\n            <Modal isOpen={modal}>\r\n                <ModalHeader>Crear Transacción</ModalHeader>\r\n                <ModalBody>\r\n                    <Form id=\"formAddTransaction\">\r\n                        <FormGroup>\r\n                            <Label for=\"txtType\">Tipo</Label>\r\n                            <Input type=\"select\" id=\"txtType\" name=\"tipo\" placeholder=\"Tipo de transacción\" value={tipo} onChange={e => onInputChange(e)} >\r\n                                <option value=\"\">Elige una opción</option>\r\n                                <option value=\"Acumulo\">Acumulo</option>\r\n                                <option value=\"Canje\">Canje</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"txtAmount\">Monto</Label>\r\n                            <Input type=\"text\" id=\"txtAmount\" name=\"monto\" placeholder=\"Monto de transacción\" value={monto} onChange={e => onInputChange(e)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"txtType\">Miembro</Label>\r\n                            <Input type=\"select\" id=\"txtMember\" name=\"id_miembro\" placeholder=\"Miembro de transacción\" value={id_miembro} onChange={e => onInputChange(e)} >\r\n                                <option value=\"\">Elige una opción</option>\r\n                                {members.map((member) => (<option value={member.id}>{member.nombre} {member.apellido}</option>))}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"txtDescription\">Descripción</Label>\r\n                            <Input type=\"textbox\" id=\"txtDescription\" name=\"descripcion\" placeholder=\"Descripción de transacción\" value={descripcion} onChange={e => onInputChange(e)} />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={onSubmit}>Aceptar</Button>\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTransaction;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\transactions\\EditTransaction.js",["161"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Spinner } from 'reactstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst EditTransaction = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const { txtId } = useParams();\r\n\r\n    const [transaction, setTransaction] = useState({});\r\n\r\n    const [id_miembro, setId_miembro] = useState();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            return history.push('/login');\r\n        } else loadTransaction();\r\n    }, []);\r\n\r\n    const loadTransaction = async () => {\r\n        let response = await fetch(`http://localhost:5000/transactions/${txtId}`, {\r\n            method: \"GET\",\r\n        });\r\n        response = await response.json();\r\n\r\n        setTransaction(response.transaccion);\r\n        if (response.transaccion.miembro)\r\n            setId_miembro(response.transaccion.miembro.id)\r\n        else \r\n            setId_miembro(null)\r\n        setLoading(false)\r\n    }\r\n\r\n    const { tipo, monto, puntos, fecha_creacion, fecha_ultima_actualizacion, descripcion } = transaction;\r\n\r\n\r\n    const onCancel = () => {\r\n        return history.push('/transactions')\r\n    }\r\n\r\n    return (\r\n        <div> { (!loading) ?\r\n            <div className=\"container fluid\">\r\n                <Form id=\"formEditTransaction\">\r\n                    <FormGroup>\r\n                        <Label for=\"txtType\">Tipo</Label>\r\n                        <Input type=\"text\" id=\"txtType\" name=\"tipo\" placeholder=\"Tipo de transacción\" value={tipo} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtMember\">Miembro</Label>\r\n                        <Input type=\"textbox\" id=\"txtMember\" name=\"id_miembro\" placeholder=\"Miembro de transacción\" value={id_miembro} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtAmount\">Monto</Label>\r\n                        <Input type=\"text\" id=\"txtAmount\" name=\"monto\" placeholder=\"Monto de transacción\" value={monto} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtPoints\">Puntos</Label>\r\n                        <Input type=\"integer\" id=\"txtPoints\" name=\"puntos\" placeholder=\"Puntos de transacción\" value={puntos} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtRegistrationDate\">Fecha de creación</Label>\r\n                        <Input type=\"date\" id=\"txtRegistrationDate\" name=\"fecha_creacion\" placeholder=\"Fecha de creación de transacción\" value={fecha_creacion} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtUpdateDate\">Fecha de actualización</Label>\r\n                        <Input type=\"date\" id=\"txtUpdateDate\" name=\"fecha_ultima_actualizacion\" placeholder=\"Fecha de actualización de transacción\" value={fecha_ultima_actualizacion} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtDescription\">Descripción</Label>\r\n                        <Input type=\"textbox\" id=\"txtDescription\" name=\"descripcion\" placeholder=\"Descripción de transacción\" value={descripcion} readOnly />\r\n                    </FormGroup>\r\n                </Form>\r\n                <Button color=\"primary\" onClick={onCancel}>Cancelar</Button>\r\n            </div> : <div className=\"spinner-center\"><Spinner color=\"primary\" /></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditTransaction;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\transactions\\SearchTransaction.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\products\\Producto.js",["162"],"import React from 'react';\r\nimport Canje from '../canje/Canje';\r\n\r\nconst Producto = (props) => {\r\n\r\n    const { id, nombre, urlImage, puntos, descripcion } = props.producto\r\n    return (\r\n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n            <div className=\"card\">\r\n                <img src={urlImage} className=\"card-img-top\" />\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{nombre}</p>\r\n                    <p className=\"card-text\">{descripcion}</p>\r\n                    <p className=\"card-text\">{puntos} Puntos</p>\r\n                    <Canje \r\n                        productId={id}\r\n                        puntos={puntos} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Producto;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\products\\ProductsTable.js",["163"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Spinner } from 'reactstrap';\r\nimport Producto from './Producto';\r\n\r\nconst ProductsTable = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            return history.push('/login');\r\n        } else getProducts();\r\n    }, []);\r\n\r\n    const getProducts = async () => {\r\n        let response = await fetch('http://localhost:5000/products', {\r\n            method: \"GET\"\r\n        });\r\n\r\n        response = await response.json();\r\n\r\n        console.log(\"Response: \", response);\r\n        setProducts(response.productos);\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div> { (!loading) ?\r\n            <div className=\"col-12 p-5 row\">\r\n                {products.map(producto => (\r\n                    <Producto\r\n                        key={producto.id}\r\n                        producto={producto} />\r\n                ))}\r\n            </div> : <div className=\"spinner-center\"><Spinner color=\"primary\" /></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductsTable;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\canje\\Canje.js",["164","165"],"import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport swal from 'sweetalert';\r\nimport jwt_decode from 'jwt-decode';\r\nimport CODIGO_HTTP from '../../utils/Utils'\r\n\r\nconst Canje = (props) => {\r\n\r\n    const { productId, puntos } = props\r\n\r\n    const trade = async () => {\r\n        var token = localStorage.getItem('token')\r\n        var decoded = jwt_decode(token);\r\n\r\n        getMember(decoded.email).then(r => {\r\n        console.log(r)\r\n        if (checkPoints(r.puntos)) {\r\n            generateTradeTransaction(r.id).then(trx => {\r\n                updateMemberPoints(r)\r\n                generateMemberVoucher(r).then(voucher => { \r\n                    console.log(voucher)\r\n                    swal(\"¡El canje se ha realizado con éxito!\", `Se generó el voucher con número: ${voucher.id} \\n Se restaron: ${puntos} puntos`, \"success\") }\r\n            )})\r\n        } else {\r\n            swal(\"Error\", \"No tiene los puntos suficientes para poder canjear\", \"error\")\r\n        }\r\n        });\r\n    }\r\n\r\n    const getMember = async (email) => {\r\n        console.log(email)\r\n        let response = await fetch(`http://localhost:5000/members?email=${email}`, {\r\n            method: \"GET\"\r\n          });\r\n            response = await response.json();\r\n            console.log(response)\r\n            if (response.code == CODIGO_HTTP.OK) {\r\n                console.log(\"Miembro filtrado: \", response.miembros[0])\r\n                return response.miembros[0]\r\n            } else {\r\n                swal(\"Error\", response.mensaje, \"error\")\r\n            }\r\n    }\r\n\r\n    const checkPoints = (puntosMiembro) => {\r\n        console.log(puntosMiembro)\r\n        console.log(puntos)\r\n        if (puntosMiembro > 0 && puntosMiembro >= puntos) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const generateTradeTransaction = async (id_miembro) => {\r\n        var payload = {\r\n            id_miembro,\r\n            puntos,\r\n            tipo: \"Canje\",\r\n            descripcion: \"Transacción generada automaticamente por canje de producto\",\r\n            monto: 0\r\n        }\r\n        console.log(payload)\r\n        let response = await fetch('http://localhost:5000/transactions', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)})\r\n\r\n        console.log(JSON.stringify(payload))\r\n        console.log(response)\r\n    }\r\n\r\n    const updateMemberPoints = async (member) => {\r\n        var puntosParaActualizar = member.puntos - puntos\r\n        console.log(\"Puntos para actualizar: \", puntosParaActualizar)\r\n        var payload = {\r\n            nombre: member.nombre,\r\n            apellido: member.apellido,\r\n            email: member.email,\r\n            fecha_de_nacimiento: member.fecha_de_nacimiento,\r\n            estado: member.estado,\r\n            comentario: member.comentario,\r\n            puntos: puntosParaActualizar\r\n        }\r\n        console.log(payload)\r\n        let response = await fetch(`http://localhost:5000/members/${member.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)})\r\n\r\n        console.log(JSON.stringify(payload))\r\n        console.log(JSON.stringify(response))\r\n    }\r\n\r\n    const generateMemberVoucher = async (member) => {\r\n        var payload = {\r\n            id_producto: productId,\r\n            id_miembro: member.id \r\n        }\r\n        console.log(\"Member de voucher\", member)\r\n        console.log(\"Payload de Crear Voucher: \", payload)\r\n\r\n        let response = await fetch('http://localhost:5000/vouchers', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)})\r\n        response = await response.json();\r\n\r\n        if (response.code == CODIGO_HTTP.CREATED) {\r\n            return response.voucher\r\n        } else {\r\n            swal(\"Error\", response.mensaje, \"error\")\r\n        }\r\n    }\r\n\r\n    const toggle = () => {\r\n        swal({\r\n            title: \"¿Estás seguro?\",\r\n            text: \"Una vez canjeado, no se podrán devolver los puntos\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n          })\r\n          .then((willTrade) => {\r\n            if (willTrade) {\r\n                trade()\r\n            }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"btn btn-primary btn-block\" onClick={toggle}>Canjear</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Canje;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\utils\\Utils.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\transactions\\TransactionsTab.js",["166"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddTransaction from './AddTransaction';\r\nimport SearchTransaction from './SearchTransaction';\r\nimport TransactionsTable from './TransactionsTable';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst TransactionsTab = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            return history.push('/login');\r\n        } else getTransactions()\r\n    }, []);\r\n\r\n    const getTransactions = async () => {\r\n        let response = await fetch('http://localhost:5000/transactions', {\r\n            method: \"GET\"\r\n        });\r\n        console.log(\"esperando el response\")\r\n        response = await response.json();\r\n        setLoading(false)\r\n        console.log(\"Response: \", response);\r\n        setTransactions(response.transacciones);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(!loading) ?\r\n                <div>\r\n                    <div className=\"buttons-line d-flex justify-content-between align-items-center\">\r\n                        <SearchTransaction />\r\n                        <AddTransaction />\r\n                    </div>\r\n                    <TransactionsTable\r\n                        transactions={transactions} />\r\n                </div> : <div className=\"spinner-center\"><Spinner color=\"primary\" /></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionsTab;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\transactions\\TransactionsTable.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\pages\\LogOut.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\AddMember.js",["167","168"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport CODIGO_HTTP from '../../utils/Utils';\r\n\r\nconst AddMember = () => {\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('token')) {\r\n      return history.push('/login');} }, [])\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [member, setMember] = useState({ \r\n      nombre: \"\",\r\n      apellido: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      fecha_de_nacimiento: \"\",\r\n      comentario: \"\",\r\n      permiso: \"\"\r\n  });\r\n\r\n  const cleanForm = () => { setMember({      \r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    fecha_de_nacimiento: \"\",\r\n    comentario: \"\",\r\n    permiso: \"\" })}\r\n\r\n  const toggle = () => {\r\n      cleanForm();\r\n      setModal(!modal);\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n    let response = await fetch('http://localhost:5000/members', {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(member)\r\n  });\r\n\r\n    console.log(JSON.stringify(member))\r\n    response = await response.json();\r\n\r\n    if (response.code == CODIGO_HTTP.CREATED) {\r\n      swal(\"Bien!\", \"Se ha creado correctamente el miembro\", \"success\").then(() => setModal(!modal))\r\n    } else {\r\n      swal(\"Error\", response.mensaje , \"error\") \r\n    }\r\n\r\n  }\r\n\r\n  const { nombre, apellido, email, password, fecha_de_nacimiento, comentario, permiso} = member;\r\n    \r\n  const onInputChange = e => {\r\n        setMember({...member, [e.target.name]: e.target.value})\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"btn btn-primary btn-add\" color=\"btn btn-primary\" onClick={toggle}>Crear Miembro</Button>\r\n      <Modal isOpen={modal}>\r\n        <ModalHeader>Crear Miembro</ModalHeader>\r\n        <ModalBody>\r\n        <Form id=\"formAddMember\">\r\n      <FormGroup>\r\n        <Label for=\"memberName\">Nombre</Label>\r\n        <Input type=\"text\" id=\"memberName\" name=\"nombre\" placeholder=\"Nombre de cliente\" value={nombre} onChange={e => onInputChange(e)}/>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberLastName\">Appellido</Label>\r\n        <Input type=\"text\" id=\"memberLastName\" name=\"apellido\"  placeholder=\"Apellido de cliente\" value={apellido} onChange={e => onInputChange(e)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberEmail\">Email</Label>\r\n        <Input type=\"text\" id=\"memberEmail\" name=\"email\" placeholder=\"Email de cliente\" value={email} onChange={e => onInputChange(e)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberPassword\">Password</Label>\r\n        <Input type=\"password\" id=\"memberPassword\" name=\"password\" placeholder=\"Contraseña de cliente\" value={password} onChange={e => onInputChange(e)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberBirthDate\">Fecha de Nacimiento</Label>\r\n        <Input type=\"date\" id=\"memberBirthDate\" name=\"fecha_de_nacimiento\" value={fecha_de_nacimiento} onChange={e => onInputChange(e)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberComment\">Comentario</Label>\r\n        <Input type=\"textbox\" id=\"memberComment\" name=\"comentario\" placeholder=\"Comentario\" value={comentario} onChange={e => onInputChange(e)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberRol\">Permiso</Label>\r\n        <Input type=\"select\" id=\"memberRol\" name=\"permiso\" placeholder=\"Permiso\" value={permiso} onChange={e => onInputChange(e)}>\r\n        <option>Usuario</option>\r\n        <option>Admin</option>\r\n        </Input>\r\n      </FormGroup>\r\n    </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={onSubmit}>Aceptar</Button>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddMember;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\EditMember.js",["169","170","171","172"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, Spinner } from 'reactstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport MemberTransactions from './MemberTransactions';\r\nimport swal from 'sweetalert';\r\nimport CODIGO_HTTP from '../../utils/Utils'\r\nimport MemberTrades from './MemberTrades';\r\nimport MemberVouchers from './MemberVouchers';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst EditMember = () => {\r\n\r\n    const { memberId } = useParams();\r\n\r\n    const [member, setMember] = useState({});\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const cleanForm = () => {\r\n        setMember({})\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadMember();\r\n    }, []);\r\n\r\n    const loadMember = async () => {\r\n        console.log(\"get del member\")\r\n        let response = await fetch(`http://localhost:5000/members/${memberId}`, {\r\n            method: \"GET\",\r\n        });\r\n\r\n        response = await response.json();\r\n        console.log(\"Response del get member\")\r\n        console.log(response)\r\n        setMember(response.miembro);\r\n        setLoading(false)\r\n    }\r\n\r\n    const { nombre, apellido, email, puntos, fecha_de_nacimiento, fecha_de_registro, estado, comentario } = member;\r\n\r\n    const onInputChange = e => {\r\n        setMember({ ...member, [e.target.name]: e.target.value })\r\n    };\r\n\r\n    const toggleTab = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n\r\n    const onSave = async () => {\r\n        checkEmail()\r\n        console.log(JSON.stringify(member))\r\n        let response = await fetch(`http://localhost:5000/members/${member.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(member)\r\n        })\r\n\r\n        response = await response.json();\r\n        console.log(response)\r\n\r\n        if (response.code == CODIGO_HTTP.OK) {\r\n            swal(\"Bien!\", \"Cambios guardados correctamente\", \"success\")\r\n        } else {\r\n            swal(\"Error\", \"No se pudieron guardar los cambios\", \"error\")\r\n        }\r\n    }\r\n\r\n    const checkEmail = async () => {\r\n        if (localStorage.getItem('token')) {\r\n            var token = localStorage.getItem('token')\r\n            var memberToken = jwt_decode(token);\r\n            console.log(\"Member token email:\", memberToken.email)\r\n            console.log(member.email)\r\n            if  (!(memberToken.email === member.email)) { \r\n                console.log(\"son distintos..\")\r\n                let response = fetch(`http://localhost:5000/members?email=${memberToken.email}`, {\r\n                    method: \"GET\"\r\n                  });\r\n                  response = await response.json();\r\n                  if (response.code == CODIGO_HTTP.OK) {\r\n                    return false\r\n                } else return true\r\n            } return true\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs=\"6\" sm=\"4\" md=\"3\">\r\n                <Nav tabs vertical pills>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: activeTab === '1' })}\r\n                            onClick={() => {\r\n                                toggleTab('1');\r\n                            }}\r\n                        >\r\n                            Información\r\n              </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            className={classnames({ active: activeTab === '2' })}\r\n                            onClick={() => {\r\n                                toggleTab('2');\r\n                            }}\r\n                        >\r\n                            Transacciones\r\n              </NavLink>\r\n                        <NavLink\r\n                            className={classnames({ active: activeTab === '3' })}\r\n                            onClick={() => {\r\n                                toggleTab('3');\r\n                            }}\r\n                        >\r\n                            Canjes\r\n              </NavLink>\r\n              <NavLink\r\n                            className={classnames({ active: activeTab === '4' })}\r\n                            onClick={() => {\r\n                                toggleTab('4');\r\n                            }}\r\n                        >\r\n                            Vouchers\r\n              </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Col>\r\n            <Col xs=\"6\" sm=\"6\" md=\"6\">\r\n                <TabContent activeTab={activeTab}>\r\n                    { (!loading) ?\r\n                    <TabPane tabId=\"1\">\r\n                        <Form id=\"formEditMember\">\r\n                            <FormGroup>\r\n                                <Label for=\"memberName\">Nombre</Label>\r\n                                <Input type=\"text\" id=\"memberName\" name=\"nombre\" placeholder=\"Nombre de cliente\" value={nombre} onChange={e => onInputChange(e)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"memberLastName\">Appellido</Label>\r\n                                <Input type=\"text\" id=\"memberLastName\" name=\"apellido\" placeholder=\"Apellido de cliente\" value={apellido} onChange={e => onInputChange(e)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"memberEmail\">Email</Label>\r\n                                <Input type=\"text\" id=\"memberEmail\" name=\"email\" placeholder=\"Email de cliente\" value={email} onChange={e => onInputChange(e)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"memberPoints\">Puntos</Label>\r\n                                <Input type=\"number\" id=\"memberPoints\" name=\"puntos\" placeholder=\"Puntos del cliente\" value={puntos} readOnly />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"memberBirthDate\">Fecha de nacimiento</Label>\r\n                                <Input type=\"date\" id=\"memberBirthDate\" name=\"fecha_de_nacimiento\" placeholder=\"Fecha de nacimiento de cliente\" value={fecha_de_nacimiento} onChange={e => onInputChange(e)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"memberRegistrationDate\">Fecha de registro</Label>\r\n                                <Input type=\"date\" id=\"memberRegistrationDate\" name=\"fecha_de_registro\" placeholder=\"Fecha de registro de cliente\" value={fecha_de_registro} readOnly />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"memberState\">Estado</Label>\r\n                                <Input type=\"select\" id=\"memberState\" name=\"estado\" placeholder=\"Estado de cliente\" value={estado} onChange={e => onInputChange(e)}>\r\n                                    <option>Activo</option>\r\n                                    <option>Inactivo</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"memberComment\">Comentario</Label>\r\n                                <Input type=\"text\" id=\"memberComment\" name=\"comentario\" placeholder=\"Comentario de cliente\" value={comentario} onChange={e => onInputChange(e)} />\r\n                            </FormGroup>\r\n                        </Form>\r\n                        <Button color=\"primary\" onClick={onSave}>Guardar</Button>\r\n                    </TabPane> : <div className=\"spinner-center\"><Spinner color=\"primary\" /></div> }\r\n                    <TabPane tabId=\"2\">\r\n                        <MemberTransactions id={memberId} />\r\n                    </TabPane>\r\n                    <TabPane tabId=\"3\">\r\n                        <MemberTrades id={memberId} />\r\n                    </TabPane>\r\n                    <TabPane tabId=\"4\">\r\n                        <MemberVouchers id={memberId} />\r\n                    </TabPane>\r\n                </TabContent>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default EditMember;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\MembersTable.js",["173","174"],"import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Spinner } from 'reactstrap';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AddMember from './AddMember';\r\nimport SearchMember from './SearchMember';\r\nimport swal from 'sweetalert';\r\nimport CODIGO_HTTP from '../../utils/Utils'\r\n\r\nconst MembersTable = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [members, setMembers] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            return history.push('/login');\r\n        } else getMembers();\r\n    }, []);\r\n\r\n    const getMembers = async () => {\r\n        let response = await fetch('http://localhost:5000/members', {\r\n            method: \"GET\"\r\n        });\r\n\r\n        response = await response.json();\r\n        console.log(\"Response: \", response);\r\n        setMembers(response.miembros);\r\n        setLoading(false)\r\n    }\r\n\r\n    const deleteMember = (memberId) => {\r\n        swal({\r\n            title: \"¿Estás seguro?\",\r\n            text: \"Una vez eliminado, no se podrá recuperar el miembro\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then(async (willDelete) => {\r\n                if (willDelete) {\r\n                    let response = await fetch(`http://localhost:5000/members/${memberId}`, {\r\n                        method: \"DELETE\"\r\n                    })\r\n                    response = await response.json()\r\n                    if (response.code == CODIGO_HTTP.OK) {\r\n                        swal(\"Bien!\", response.mensaje, \"success\").then(() => {\r\n                            window.location.reload();\r\n                        })\r\n                    } else {\r\n                        swal(\"Error\", response.mensaje, \"error\")\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { (!loading) ?\r\n                <div>\r\n                    <div className=\"buttons-line d-flex justify-content-between align-items-center\">\r\n                        <SearchMember />\r\n                        <AddMember />\r\n                    </div>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Id</th>\r\n                                <th>Nombre</th>\r\n                                <th>Apellido</th>\r\n                                <th>Email</th>\r\n                                <th>Puntos</th>\r\n                                <th>Fecha de Registro</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {members.map((member) => (\r\n                                <tr>\r\n                                    <td>{member.id}</td>\r\n                                    <td>{member.nombre}</td>\r\n                                    <td>{member.apellido}</td>\r\n                                    <td>{member.email}</td>\r\n                                    <td>{member.puntos}</td>\r\n                                    <td>{member.fecha_de_registro}</td>\r\n                                    <td>\r\n                                        <Link className=\"btn btn-primary\" id=\"btnEditMember\" exact to={`/members/${member.id}`}>Ver</Link>\r\n                                        <Button className=\"btn btn-danger\" id=\"btnDeleteMember\" onClick={() => deleteMember(member.id)}>Eliminar</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </div> : <div className=\"spinner-center\"><Spinner color=\"primary\" /></div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MembersTable;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\MemberTransactions.js",["175"],"import React, { useState, useEffect } from 'react';\r\nimport TransactionsTable from '../transactions/TransactionsTable';\r\n\r\nconst MemberTransactions = (props) => {\r\n\r\n    const { id } = props\r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadTransactions(id)\r\n    },[]);\r\n\r\n    const loadTransactions = async (id) => {\r\n        let response = await fetch(`http://localhost:5000/transactions?id_miembro=${id}`, {\r\n            method: \"GET\"\r\n          });\r\n          response = await response.json();\r\n\r\n          setTransactions(response.transacciones);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <TransactionsTable transactions={transactions} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MemberTransactions;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\MemberTrades.js",["176"],"import React, { useState, useEffect } from 'react';\r\nimport TransactionsTable from '../transactions/TransactionsTable';\r\n\r\nconst MemberTrades= (props) => {\r\n\r\n    const { id } = props\r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadTransactions(id)\r\n    },[]);\r\n\r\n    const loadTransactions = async (id) => {\r\n        let tipo = \"Canje\"\r\n        let response = await fetch(`http://localhost:5000/transactions?id_miembro=${id}&tipo=${tipo}`, {\r\n            method: \"GET\"\r\n          });\r\n          response = await response.json();\r\n\r\n          setTransactions(response.transacciones);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <TransactionsTable transactions={transactions} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MemberTrades;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\SearchMember.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\vouchers\\VouchersTable.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\vouchers\\VouchersTab.js",["177"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Spinner } from 'reactstrap';\r\nimport VouchersTable from './VouchersTable';\r\n\r\nconst VouchersTab = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [vouchers, setVouchers] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            return history.push('/login');\r\n        } else getVouchers()\r\n    }, []);\r\n\r\n    const getVouchers = async () => {\r\n        let response = await fetch('http://localhost:5000/vouchers', {\r\n            method: \"GET\"\r\n        });\r\n        response = await response.json();\r\n        console.log(\"Response: \", response);\r\n        setVouchers(response.vouchers);\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div> { (!loading) ?\r\n            <VouchersTable\r\n                vouchers={vouchers} /> : <div className=\"spinner-center\"><Spinner color=\"primary\" /></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VouchersTab;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\members\\MemberVouchers.js",["178"],"import React, { useState, useEffect } from 'react';\r\nimport VouchersTable from '../vouchers/VouchersTable';\r\n\r\nconst MemberVouchers = (props) => {\r\n\r\n    const { id } = props\r\n\r\n    const [vouchers, setVouchers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadVouchers(id)\r\n    },[]);\r\n\r\n    const loadVouchers = async (id) => {\r\n        let response = await fetch(`http://localhost:5000/vouchers?id_miembro=${id}`, {\r\n            method: \"GET\"\r\n          });\r\n          response = await response.json();\r\n\r\n          setVouchers(response.vouchers);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <VouchersTable vouchers={vouchers} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MemberVouchers;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire-frontend-v2\\src\\components\\vouchers\\EditVoucher.js",["179"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Spinner } from 'reactstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst EditVoucher = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const { voucherId } = useParams();\r\n\r\n    const [voucher, setVoucher] = useState({});\r\n\r\n    const [id_miembro, setId_miembro] = useState();\r\n\r\n    const [id_producto, setId_producto] = useState();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            return history.push('/login');\r\n        } else loadVouchers();\r\n    }, []);\r\n\r\n    const loadVouchers = async () => {\r\n        let response = await fetch(`http://localhost:5000/vouchers/${voucherId}`, {\r\n            method: \"GET\",\r\n        });\r\n        response = await response.json();\r\n\r\n        setVoucher(response.voucher);\r\n        if (response.voucher.miembro)\r\n            setId_miembro(response.voucher.miembro.id)\r\n         else \r\n        setId_miembro(null)\r\n        \r\n        if (response.voucher.producto)\r\n        setId_producto(response.voucher.producto.id)\r\n         else \r\n         setId_producto(null)\r\n        setLoading(false)\r\n    }\r\n\r\n    const { id, fecha_de_creacion, estado, fecha_de_vencimiento } = voucher;\r\n\r\n\r\n    const onCancel = () => {\r\n        return history.push('/vouchers')\r\n    }\r\n\r\n    return (\r\n        <div> { (!loading) ?\r\n            <div className=\"container fluid\">\r\n                <Form id=\"formEditTransaction\">\r\n                    <FormGroup>\r\n                        <Label for=\"voucherId\">ID</Label>\r\n                        <Input type=\"text\" id=\"voucherId\" name=\"id\" placeholder=\"Id de voucher\" value={id} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"voucherMember\">Miembro</Label>\r\n                        <Input type=\"integer\" id=\"voucherMember\" name=\"id_miembro\" placeholder=\"Id de Miembro del voucher\" value={id_miembro} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"voucherProduct\">Producto</Label>\r\n                        <Input type=\"integer\" id=\"voucherProduct\" name=\"id_producto\" placeholder=\"Id de Miembro del voucher\" value={id_producto} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"voucherRegistrationDate\">Fecha de creación</Label>\r\n                        <Input type=\"date\" id=\"voucherRegistrationDate\" name=\"fecha_de_creacion\" placeholder=\"Fecha de creación del voucher\" value={fecha_de_creacion} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"voucherState\">Estado</Label>\r\n                        <Input type=\"text\" id=\"voucherState\" name=\"estado\" placeholder=\"Estado del voucher\" value={estado} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"voucherExpirationDate\">Fecha de vencimiento</Label>\r\n                        <Input type=\"date\" id=\"voucherExpirationDate\" name=\"fecha_de_vencimiento\" placeholder=\"Fecha de vencmiento del voucher\" value={fecha_de_vencimiento} readOnly />\r\n                    </FormGroup>\r\n                </Form>\r\n                <Button color=\"primary\" onClick={onCancel}>Cancelar</Button>\r\n            </div> : <div className=\"spinner-center\"><Spinner color=\"primary\" /></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditVoucher;",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":12,"column":21,"nodeType":"186","endLine":12,"endColumn":107},{"ruleId":"184","severity":1,"message":"185","line":16,"column":21,"nodeType":"186","endLine":16,"endColumn":113},{"ruleId":"184","severity":1,"message":"185","line":18,"column":25,"nodeType":"186","endLine":18,"endColumn":116},{"ruleId":"184","severity":1,"message":"185","line":19,"column":25,"nodeType":"186","endLine":19,"endColumn":113},{"ruleId":"184","severity":1,"message":"185","line":22,"column":25,"nodeType":"186","endLine":22,"endColumn":124},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"191","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":18},{"ruleId":"187","severity":1,"message":"192","line":8,"column":19,"nodeType":"189","messageId":"190","endLine":8,"endColumn":27},{"ruleId":"193","severity":1,"message":"194","line":23,"column":8,"nodeType":"195","endLine":23,"endColumn":10,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":50,"column":27,"nodeType":"199","messageId":"200","endLine":50,"endColumn":29},{"ruleId":"197","severity":1,"message":"198","line":27,"column":27,"nodeType":"199","messageId":"200","endLine":27,"endColumn":29},{"ruleId":"193","severity":1,"message":"201","line":50,"column":8,"nodeType":"195","endLine":50,"endColumn":10,"suggestions":"202"},{"ruleId":"187","severity":1,"message":"203","line":10,"column":12,"nodeType":"189","messageId":"190","endLine":10,"endColumn":26},{"ruleId":"187","severity":1,"message":"204","line":41,"column":13,"nodeType":"189","messageId":"190","endLine":41,"endColumn":32},{"ruleId":"197","severity":1,"message":"198","line":77,"column":29,"nodeType":"199","messageId":"200","endLine":77,"endColumn":31},{"ruleId":"205","severity":1,"message":"206","line":93,"column":13,"nodeType":"186","endLine":93,"endColumn":47},{"ruleId":"180","replacedBy":"207"},{"ruleId":"182","replacedBy":"208"},{"ruleId":"187","severity":1,"message":"209","line":2,"column":93,"nodeType":"189","messageId":"190","endLine":2,"endColumn":100},{"ruleId":"193","severity":1,"message":"210","line":19,"column":14,"nodeType":"195","endLine":19,"endColumn":16,"suggestions":"211"},{"ruleId":"197","severity":1,"message":"198","line":75,"column":27,"nodeType":"199","messageId":"200","endLine":75,"endColumn":29},{"ruleId":"197","severity":1,"message":"198","line":94,"column":27,"nodeType":"199","messageId":"200","endLine":94,"endColumn":29},{"ruleId":"193","severity":1,"message":"212","line":22,"column":8,"nodeType":"195","endLine":22,"endColumn":10,"suggestions":"213"},{"ruleId":"184","severity":1,"message":"185","line":10,"column":17,"nodeType":"186","endLine":10,"endColumn":64},{"ruleId":"193","severity":1,"message":"201","line":18,"column":8,"nodeType":"195","endLine":18,"endColumn":10,"suggestions":"214"},{"ruleId":"197","severity":1,"message":"198","line":37,"column":31,"nodeType":"199","messageId":"200","endLine":37,"endColumn":33},{"ruleId":"197","severity":1,"message":"198","line":115,"column":27,"nodeType":"199","messageId":"200","endLine":115,"endColumn":29},{"ruleId":"193","severity":1,"message":"201","line":20,"column":8,"nodeType":"195","endLine":20,"endColumn":10,"suggestions":"215"},{"ruleId":"193","severity":1,"message":"201","line":13,"column":42,"nodeType":"195","endLine":13,"endColumn":44,"suggestions":"216"},{"ruleId":"197","severity":1,"message":"198","line":53,"column":23,"nodeType":"199","messageId":"200","endLine":53,"endColumn":25},{"ruleId":"187","severity":1,"message":"217","line":22,"column":11,"nodeType":"189","messageId":"190","endLine":22,"endColumn":20},{"ruleId":"193","severity":1,"message":"218","line":28,"column":8,"nodeType":"195","endLine":28,"endColumn":10,"suggestions":"219"},{"ruleId":"197","severity":1,"message":"198","line":67,"column":27,"nodeType":"199","messageId":"200","endLine":67,"endColumn":29},{"ruleId":"197","severity":1,"message":"198","line":86,"column":37,"nodeType":"199","messageId":"200","endLine":86,"endColumn":39},{"ruleId":"193","severity":1,"message":"201","line":21,"column":8,"nodeType":"195","endLine":21,"endColumn":10,"suggestions":"220"},{"ruleId":"197","severity":1,"message":"198","line":48,"column":39,"nodeType":"199","messageId":"200","endLine":48,"endColumn":41},{"ruleId":"193","severity":1,"message":"221","line":12,"column":7,"nodeType":"195","endLine":12,"endColumn":9,"suggestions":"222"},{"ruleId":"193","severity":1,"message":"221","line":12,"column":7,"nodeType":"195","endLine":12,"endColumn":9,"suggestions":"223"},{"ruleId":"193","severity":1,"message":"201","line":18,"column":8,"nodeType":"195","endLine":18,"endColumn":10,"suggestions":"224"},{"ruleId":"193","severity":1,"message":"221","line":12,"column":7,"nodeType":"195","endLine":12,"endColumn":9,"suggestions":"225"},{"ruleId":"193","severity":1,"message":"226","line":24,"column":8,"nodeType":"195","endLine":24,"endColumn":10,"suggestions":"227"},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'jwt_decode' is defined but never used.","'setAdmin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyRoute'. Either include it or remove the dependency array.","ArrayExpression",["230"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["231"],"'fieldRequireds' is assigned a value but never used.","'checkFieldsRequired' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["228"],["229"],"'Spinner' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'members'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has missing dependencies: 'history' and 'loadTransaction'. Either include them or remove the dependency array.",["233"],["234"],["235"],["236"],"'cleanForm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadMember'. Either include it or remove the dependency array.",["237"],["238"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["239"],["240"],["241"],["242"],"React Hook useEffect has missing dependencies: 'history' and 'loadVouchers'. Either include them or remove the dependency array.",["243"],"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"246","fix":"252"},{"desc":"246","fix":"253"},{"desc":"246","fix":"254"},{"desc":"255","fix":"256"},{"desc":"246","fix":"257"},{"desc":"258","fix":"259"},{"desc":"258","fix":"260"},{"desc":"246","fix":"261"},{"desc":"258","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [verifyRoute]",{"range":"265","text":"266"},"Update the dependencies array to be: [history]",{"range":"267","text":"268"},"Update the dependencies array to be: [history, members]",{"range":"269","text":"270"},"Update the dependencies array to be: [history, loadTransaction]",{"range":"271","text":"272"},{"range":"273","text":"268"},{"range":"274","text":"268"},{"range":"275","text":"268"},"Update the dependencies array to be: [loadMember]",{"range":"276","text":"277"},{"range":"278","text":"268"},"Update the dependencies array to be: [id]",{"range":"279","text":"280"},{"range":"281","text":"280"},{"range":"282","text":"268"},{"range":"283","text":"280"},"Update the dependencies array to be: [history, loadVouchers]",{"range":"284","text":"285"},[653,655],"[verifyRoute]",[1525,1527],"[history]",[626,628],"[history, members]",[625,627],"[history, loadTransaction]",[503,505],[637,639],[458,460],[879,881],"[loadMember]",[643,645],[314,316],"[id]",[307,309],[511,513],[286,288],[671,673],"[history, loadVouchers]"]