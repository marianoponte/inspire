[{"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\index.js":"1","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\App.js":"2","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\layouts\\NavbarMain.js":"4","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\pages\\NotFound.js":"5","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\EditMember.js":"6","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\MembersTable.js":"7","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\pages\\Home.js":"8","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\AddMember.js":"9","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\pages\\Login.js":"10","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\transactions\\TransactionsTab.js":"11","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\vouchers\\VouchersTab.js":"12","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\transactions\\EditTransaction.js":"13","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\products\\ProductsTable.js":"14","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\vouchers\\EditVoucher.js":"15","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\pages\\LogOut.js":"16","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\MemberTrades.js":"17","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\MemberTransactions.js":"18","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\MemberVouchers.js":"19","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\SearchMember.js":"20","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\transactions\\SearchTransaction.js":"21","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\transactions\\TransactionsTable.js":"22","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\pages\\Register.js":"23","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\products\\Producto.js":"24","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\transactions\\AddTransaction.js":"25","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\vouchers\\VouchersTable.js":"26","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\utils\\Utils.js":"27","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\canje\\Canje.js":"28","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\products\\AddProduct.js":"29","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\products\\DeleteProduct.js":"30"},{"size":517,"mtime":1614066141530,"results":"31","hashOfConfig":"32"},{"size":1863,"mtime":1614138041824,"results":"33","hashOfConfig":"32"},{"size":375,"mtime":1613514360404,"results":"34","hashOfConfig":"32"},{"size":1694,"mtime":1614182209646,"results":"35","hashOfConfig":"32"},{"size":1623,"mtime":1614182129489,"results":"36","hashOfConfig":"32"},{"size":8729,"mtime":1614185401180,"results":"37","hashOfConfig":"32"},{"size":5315,"mtime":1614182949536,"results":"38","hashOfConfig":"32"},{"size":3835,"mtime":1614142915193,"results":"39","hashOfConfig":"32"},{"size":4738,"mtime":1614147790785,"results":"40","hashOfConfig":"32"},{"size":3652,"mtime":1614182147286,"results":"41","hashOfConfig":"32"},{"size":3431,"mtime":1614183840066,"results":"42","hashOfConfig":"32"},{"size":2922,"mtime":1614184064567,"results":"43","hashOfConfig":"32"},{"size":5588,"mtime":1614146892543,"results":"44","hashOfConfig":"32"},{"size":2980,"mtime":1614185902868,"results":"45","hashOfConfig":"32"},{"size":4961,"mtime":1614142973653,"results":"46","hashOfConfig":"32"},{"size":858,"mtime":1613946866114,"results":"47","hashOfConfig":"32"},{"size":799,"mtime":1613942428537,"results":"48","hashOfConfig":"32"},{"size":771,"mtime":1613890835424,"results":"49","hashOfConfig":"32"},{"size":710,"mtime":1613974090417,"results":"50","hashOfConfig":"32"},{"size":722,"mtime":1614152642252,"results":"51","hashOfConfig":"32"},{"size":423,"mtime":1613792353387,"results":"52","hashOfConfig":"32"},{"size":1799,"mtime":1614126758029,"results":"53","hashOfConfig":"32"},{"size":4890,"mtime":1614114401807,"results":"54","hashOfConfig":"32"},{"size":958,"mtime":1614147480750,"results":"55","hashOfConfig":"32"},{"size":8146,"mtime":1614146525683,"results":"56","hashOfConfig":"32"},{"size":1639,"mtime":1614135422404,"results":"57","hashOfConfig":"32"},{"size":137,"mtime":1613897765531,"results":"58","hashOfConfig":"32"},{"size":4673,"mtime":1614147450370,"results":"59","hashOfConfig":"32"},{"size":3468,"mtime":1614182346534,"results":"60","hashOfConfig":"32"},{"size":1284,"mtime":1614147679069,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"svcau3",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"64"},"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\index.js",[],["135","136"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\App.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\layouts\\NavbarMain.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\pages\\NotFound.js",["137","138","139","140","141"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\EditMember.js",["142","143","144","145","146"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\MembersTable.js",["147","148","149","150"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\pages\\Home.js",["151","152","153"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwt_decode from 'jwt-decode';\r\nimport CODIGO_HTTP from '../../utils/Utils'\r\nimport swal from 'sweetalert';\r\nimport {Spinner} from 'reactstrap';\r\n\r\nconst Home = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [info, setInfo] = useState({\r\n        nombre: \"\",\r\n        apellido: \"\",\r\n        puntos: \"\"\r\n    });\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const getMember = async (email) => {\r\n        let response = await fetch(`http://localhost:5000/members?email=${email}`, {\r\n            method: \"GET\"\r\n        });\r\n        response = await response.json();\r\n        console.log(response)\r\n        setLoading(false)\r\n        if (response.code == CODIGO_HTTP.OK) {\r\n            console.log(\"Miembro filtrado: \", response.miembros[0])\r\n            return response.miembros[0]\r\n        } else {\r\n            swal(\"Error\", response.mensaje, \"error\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            var token = localStorage.getItem('token')\r\n            var member = jwt_decode(token);\r\n            if (member.permiso == \"Admin\") {\r\n                document.getElementById('member-navbar').style.display = \"flex\";\r\n            } else {\r\n                document.getElementById('member-navbar').style.display = \"none\";\r\n            }\r\n            getMember(member.email)\r\n                .then(r => {\r\n                    setInfo({\r\n                        nombre: r.nombre,\r\n                        apellido: r.apellido,\r\n                        puntos: r.puntos\r\n                    })\r\n                })\r\n        } else {\r\n            return history.push('/login');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {(!loading) ? \r\n        <div>\r\n            <div className=\"jumbotron\">\r\n                <div className=\"container\">\r\n                <h1 className=\"display-3\">Bienvenido {info.nombre} {info.apellido}!</h1>\r\n                <h1>Tenes <strong>{info.puntos}</strong> Puntos</h1>\r\n                </div> \r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\"> \r\n                        <h2>Programa de lealtad</h2>\r\n                        <p>Queremos que tengas una experiencia positiva y recompensarte a vos y a los clientes que compran o se comprometen con la marca una y otra vez.</p>\r\n                        <div className=\"align-items-center text-center d-flex\"><i class=\"fa fa-cart-plus fa-3x  mx-auto d-flex\" aria-hidden=\"true\"></i></div>\r\n                    </div>\r\n                    <div className=\"col-md-4\"> \r\n                        <h2>Puntos</h2>\r\n                        <p>Se te asignaron 500 puntos al momento de registrarte y además por cada $1 gastado, en compras con nosotros, obtendrás 0.5 puntos que se irán acumulando ¡sin límite!</p>\r\n                        <div className=\"align-items-center text-center d-flex\"><i className=\"fa fa-money fa-3x  mx-auto d-flex\" aria-hidden=\"true\"></i></div>\r\n                    </div>\r\n                    <div className=\"col-md-4 align-items-center\"> \r\n                        <h2>Canjes</h2>\r\n                        <p>¡Podrás canjear los puntos acumulados por cualquier producto de nuestro catálogo! Recibirás un voucher con un código único y con 30 días de validación.</p>\r\n                        <div className=\"align-items-center text-center d-flex\"><i className=\"fa fa-cart-arrow-down fa-3x mx-auto d-flex\"></i></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            : <div className=\"spinner-center\"><Spinner color=\"primary\"/></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\AddMember.js",["154","155","156","157"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport CODIGO_HTTP from '../../utils/Utils';\r\n\r\nconst AddMember = () => {\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('token')) {\r\n      return history.push('/login');} }, [])\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [member, setMember] = useState({ \r\n      nombre: \"\",\r\n      apellido: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      fecha_de_nacimiento: \"\",\r\n      comentario: \"\",\r\n      permiso: \"\"\r\n  });\r\n\r\n  const cleanForm = () => { setMember({      \r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    fecha_de_nacimiento: \"\",\r\n    comentario: \"\",\r\n    permiso: \"\" })}\r\n\r\n  const toggle = () => {\r\n      cleanForm();\r\n      setModal(!modal);\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n    let response = await fetch('http://localhost:5000/members', {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(member)\r\n  });\r\n\r\n    console.log(JSON.stringify(member))\r\n    response = await response.json();\r\n\r\n    if (response.code == CODIGO_HTTP.CREATED) {\r\n      swal(\"Bien!\", \"Se ha creado correctamente el miembro\", \"success\").then(() => { setModal(!modal); window.location.reload()})\r\n    } else {\r\n      swal(\"Error\", response.mensaje , \"error\") \r\n    }\r\n\r\n  }\r\n\r\n  const { nombre, apellido, email, password, fecha_de_nacimiento, comentario, permiso} = member;\r\n    \r\n  const onInputChange = e => {\r\n        setMember({...member, [e.target.name]: e.target.value})\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let response = await fetch('http://localhost:5000/members', {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(member)\r\n  });\r\n\r\n    console.log(JSON.stringify(member))\r\n    response = await response.json();\r\n\r\n    if (response.code == CODIGO_HTTP.CREATED) {\r\n      swal(\"Bien!\", \"Se ha creado correctamente el miembro\", \"success\").then(() => setModal(!modal))\r\n    } else {\r\n      swal(\"Error\", response.mensaje , \"error\") \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"btn btn-primary btn-add\" color=\"btn btn-primary\" onClick={toggle}>Crear Miembro</Button>\r\n      <Modal isOpen={modal}>\r\n      <Form id=\"formAddMember\" onSubmit={handleSubmit}>\r\n        <ModalHeader>Crear Miembro</ModalHeader>\r\n        <ModalBody>\r\n      <FormGroup>\r\n        <Label for=\"memberName\">Nombre</Label>\r\n        <Input type=\"text\" id=\"memberName\" name=\"nombre\" placeholder=\"Nombre de cliente\" value={nombre} onChange={e => onInputChange(e)} required />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberLastName\">Appellido</Label>\r\n        <Input type=\"text\" id=\"memberLastName\" name=\"apellido\"  placeholder=\"Apellido de cliente\" value={apellido} onChange={e => onInputChange(e)} required />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberEmail\">Email</Label>\r\n        <Input type=\"text\" id=\"memberEmail\" name=\"email\" placeholder=\"Email de cliente\" value={email} onChange={e => onInputChange(e)} required />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberPassword\">Password</Label>\r\n        <Input type=\"password\" id=\"memberPassword\" name=\"password\" placeholder=\"Contraseña de cliente\" value={password} onChange={e => onInputChange(e)} required />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberBirthDate\">Fecha de Nacimiento</Label>\r\n        <Input type=\"date\" id=\"memberBirthDate\" name=\"fecha_de_nacimiento\" value={fecha_de_nacimiento} onChange={e => onInputChange(e)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberComment\">Comentario</Label>\r\n        <Input type=\"textbox\" id=\"memberComment\" name=\"comentario\" placeholder=\"Comentario\" value={comentario} onChange={e => onInputChange(e)} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"memberRol\">Permiso</Label>\r\n        <Input type=\"select\" id=\"memberRol\" name=\"permiso\" placeholder=\"Permiso\" value={permiso} onChange={e => onInputChange(e)} required>\r\n        <option>Usuario</option>\r\n        <option>Admin</option>\r\n        </Input>\r\n      </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" type=\"submit\">Aceptar</Button>\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddMember;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\pages\\Login.js",["158","159"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\transactions\\TransactionsTab.js",["160","161","162","163"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\vouchers\\VouchersTab.js",["164","165","166"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\transactions\\EditTransaction.js",["167","168","169","170","171"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Spinner } from 'reactstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport CODIGO_HTTP from '../../utils/Utils'\r\n\r\nconst EditTransaction = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const { txtId } = useParams();\r\n\r\n    const [transaction, setTransaction] = useState({});\r\n\r\n    const [miembro, setMiembro] = useState({});\r\n\r\n    const [producto, setProducto] = useState({});\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            return history.push('/login');\r\n        } else {\r\n            var token = localStorage.getItem('token')\r\n            var memberLogged = jwt_decode(token);\r\n            if (memberLogged.permiso == \"Admin\") {\r\n                loadTransactionAdmin();\r\n            } else {\r\n                loadTransactionUser(memberLogged.id);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const loadTransactionAdmin = async () => {\r\n        let response = await fetch(`http://localhost:5000/transactions/${txtId}`, {\r\n            method: \"GET\",\r\n        });\r\n        response = await response.json();\r\n\r\n        if (response.code == CODIGO_HTTP.OK) {\r\n            setTransaction(response.transaccion);\r\n        } else {\r\n            return history.push(\"/NotFound\")\r\n        }\r\n        if (response.transaccion.miembro)\r\n            setMiembro(response.transaccion.miembro)\r\n        else\r\n            setMiembro(null)\r\n        if (response.transaccion.producto)\r\n            setProducto(response.transaccion.producto)\r\n        else\r\n            setProducto(null)\r\n        setLoading(false)\r\n    }\r\n\r\n    const loadTransactionUser = async (id_miembro) => {\r\n        let response = await fetch(`http://localhost:5000/transactions/${txtId}`, {\r\n            method: \"GET\",\r\n        });\r\n        response = await response.json();\r\n        if (response.code == CODIGO_HTTP.OK) {\r\n            setTransaction(response.transaccion);\r\n        } else {\r\n            return history.push(\"/NotFound\")\r\n        }\r\n        if (response.transaccion.miembro)\r\n            if (response.transaccion.miembro.id != id_miembro) {\r\n                history.push(\"/NotFound\")\r\n            }\r\n            else setMiembro(response.transaccion.miembro)\r\n        else\r\n            setMiembro(null)\r\n\r\n        if (response.transaccion.producto)\r\n            setProducto(response.transaccion.producto)\r\n        else\r\n            setProducto(null)\r\n        setLoading(false)\r\n    }\r\n\r\n    const { tipo, monto, puntos, fecha_creacion, fecha_ultima_actualizacion, descripcion } = transaction;\r\n\r\n\r\n    const onCancel = () => {\r\n        return history.push('/transactions')\r\n    }\r\n\r\n    return (\r\n        <div> { (!loading) ?\r\n            <div className=\"container fluid\">\r\n                <Form id=\"formEditTransaction\">\r\n                    <FormGroup>\r\n                        <Label for=\"txtType\">Tipo</Label>\r\n                        <Input type=\"text\" id=\"txtType\" name=\"tipo\" placeholder=\"Tipo de transacción\" value={tipo} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtIdMember\">Id Miembro</Label>\r\n                        <Input type=\"integer\" id=\"txtIdMember\" name=\"id_miembro\" placeholder=\"Miembro de transacción\" value={miembro ? miembro.id : null} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtIdProduct\">Id Producto</Label>\r\n                        <Input type=\"integer\" id=\"txtIdProduct\" name=\"id_producto\" placeholder=\"Producto de transacción\" value={producto ? producto.id : null} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtAmount\">Monto</Label>\r\n                        <Input type=\"text\" id=\"txtAmount\" name=\"monto\" placeholder=\"Monto de transacción\" value={monto} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtPoints\">Puntos</Label>\r\n                        <Input type=\"integer\" id=\"txtPoints\" name=\"puntos\" placeholder=\"Puntos de transacción\" value={puntos} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtRegistrationDate\">Fecha de creación</Label>\r\n                        <Input type=\"date\" id=\"txtRegistrationDate\" name=\"fecha_creacion\" placeholder=\"Fecha de creación de transacción\" value={fecha_creacion} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtUpdateDate\">Fecha de actualización</Label>\r\n                        <Input type=\"date\" id=\"txtUpdateDate\" name=\"fecha_ultima_actualizacion\" placeholder=\"Fecha de actualización de transacción\" value={fecha_ultima_actualizacion} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"txtDescription\">Descripción</Label>\r\n                        <Input type=\"textbox\" id=\"txtDescription\" name=\"descripcion\" placeholder=\"Descripción de transacción\" value={descripcion} readOnly />\r\n                    </FormGroup>\r\n                </Form>\r\n                <Button color=\"primary\" onClick={onCancel}>Cancelar</Button>\r\n            </div> : <div className=\"spinner-center\"><Spinner color=\"primary\" /></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditTransaction;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\products\\ProductsTable.js",["172","173","174"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\vouchers\\EditVoucher.js",["175","176","177","178","179"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Spinner } from 'reactstrap';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport CODIGO_HTTP from '../../utils/Utils'\r\n\r\nconst EditVoucher = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const { voucherId } = useParams();\r\n\r\n    const [voucher, setVoucher] = useState({});\r\n\r\n    const [id_miembro, setId_miembro] = useState();\r\n\r\n    const [id_producto, setId_producto] = useState();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            return history.push('/login');\r\n        } else {\r\n                var token = localStorage.getItem('token')\r\n                var memberLogged = jwt_decode(token);\r\n                if (memberLogged.permiso == \"Admin\") {\r\n                    loadVoucherAdmin();\r\n                } else {\r\n                    loadVoucherUser(memberLogged.id);\r\n                }\r\n        }\r\n    }, []);\r\n\r\n    const loadVoucherAdmin = async () => {\r\n        let response = await fetch(`http://localhost:5000/vouchers/${voucherId}`, {\r\n            method: \"GET\",\r\n        });\r\n        response = await response.json();\r\n\r\n        if (response.code == CODIGO_HTTP.OK) {\r\n            setVoucher(response.voucher);\r\n        } else {\r\n            return history.push(\"/NotFound\")\r\n        }\r\n        \r\n        if (response.voucher.miembro)\r\n            setId_miembro(response.voucher.miembro.id)\r\n        else\r\n            setId_miembro(null)\r\n\r\n        if (response.voucher.producto)\r\n            setId_producto(response.voucher.producto.id)\r\n        else\r\n            setId_producto(null)\r\n        setLoading(false)\r\n    }\r\n\r\n    const loadVoucherUser = async (id_miembro) => {\r\n        let response = await fetch(`http://localhost:5000/vouchers/${voucherId}`, {\r\n            method: \"GET\",\r\n        });\r\n        response = await response.json();\r\n\r\n        if (response.code == CODIGO_HTTP.OK) {\r\n            setVoucher(response.voucher);\r\n        } else {\r\n            return history.push(\"/NotFound\")\r\n        }\r\n\r\n        if (response.voucher.miembro)\r\n            if (response.voucher.miembro.id != id_miembro) {\r\n                history.push(\"/NotFound\")\r\n            } else\r\n                setId_miembro(response.voucher.miembro.id)\r\n        else\r\n            setId_miembro(null)\r\n\r\n        if (response.voucher.producto)\r\n            setId_producto(response.voucher.producto.id)\r\n        else\r\n            setId_producto(null)\r\n        setLoading(false)\r\n    }\r\n\r\n    const { id, fecha_de_creacion, estado, fecha_de_vencimiento } = voucher;\r\n\r\n    const onCancel = () => {\r\n        return history.push('/vouchers')\r\n    }\r\n\r\n    return (\r\n        <div> { (!loading) ?\r\n            <div className=\"container fluid\">\r\n                <Form id=\"formEditTransaction\">\r\n                    <FormGroup>\r\n                        <Label for=\"voucherId\">ID</Label>\r\n                        <Input type=\"text\" id=\"voucherId\" name=\"id\" placeholder=\"Id de voucher\" value={id} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"voucherMember\">Miembro</Label>\r\n                        <Input type=\"integer\" id=\"voucherMember\" name=\"id_miembro\" placeholder=\"Id de Miembro del voucher\" value={id_miembro} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"voucherProduct\">Producto</Label>\r\n                        <Input type=\"integer\" id=\"voucherProduct\" name=\"id_producto\" placeholder=\"Id de Miembro del voucher\" value={id_producto} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"voucherRegistrationDate\">Fecha de creación</Label>\r\n                        <Input type=\"date\" id=\"voucherRegistrationDate\" name=\"fecha_de_creacion\" placeholder=\"Fecha de creación del voucher\" value={fecha_de_creacion} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"voucherState\">Estado</Label>\r\n                        <Input type=\"text\" id=\"voucherState\" name=\"estado\" placeholder=\"Estado del voucher\" value={estado} readOnly />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"voucherExpirationDate\">Fecha de vencimiento</Label>\r\n                        <Input type=\"date\" id=\"voucherExpirationDate\" name=\"fecha_de_vencimiento\" placeholder=\"Fecha de vencmiento del voucher\" value={fecha_de_vencimiento} readOnly />\r\n                    </FormGroup>\r\n                </Form>\r\n                <Button color=\"primary\" onClick={onCancel}>Cancelar</Button>\r\n            </div> : <div className=\"spinner-center\"><Spinner color=\"primary\" /></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditVoucher;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\pages\\LogOut.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\MemberTrades.js",["180"],"import React, { useState, useEffect } from 'react';\r\nimport TransactionsTable from '../transactions/TransactionsTable';\r\n\r\nconst MemberTrades= (props) => {\r\n\r\n    const { id } = props\r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadTransactions(id)\r\n    },[]);\r\n\r\n    const loadTransactions = async (id) => {\r\n        let tipo = \"Canje\"\r\n        let response = await fetch(`http://localhost:5000/transactions?id_miembro=${id}&tipo=${tipo}`, {\r\n            method: \"GET\"\r\n          });\r\n          response = await response.json();\r\n\r\n          setTransactions(response.transacciones);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <TransactionsTable transactions={transactions} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MemberTrades;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\MemberTransactions.js",["181"],"import React, { useState, useEffect } from 'react';\r\nimport TransactionsTable from '../transactions/TransactionsTable';\r\n\r\nconst MemberTransactions = (props) => {\r\n\r\n    const { id } = props\r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadTransactions(id)\r\n    },[]);\r\n\r\n    const loadTransactions = async (id) => {\r\n        let response = await fetch(`http://localhost:5000/transactions?id_miembro=${id}`, {\r\n            method: \"GET\"\r\n          });\r\n          response = await response.json();\r\n\r\n          setTransactions(response.transacciones);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <TransactionsTable transactions={transactions} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MemberTransactions;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\MemberVouchers.js",["182"],"import React, { useState, useEffect } from 'react';\r\nimport VouchersTable from '../vouchers/VouchersTable';\r\n\r\nconst MemberVouchers = (props) => {\r\n\r\n    const { id } = props\r\n\r\n    const [vouchers, setVouchers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadVouchers(id)\r\n    },[]);\r\n\r\n    const loadVouchers = async (id) => {\r\n        let response = await fetch(`http://localhost:5000/vouchers?id_miembro=${id}`, {\r\n            method: \"GET\"\r\n          });\r\n          response = await response.json();\r\n\r\n          setVouchers(response.vouchers);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <VouchersTable vouchers={vouchers} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MemberVouchers;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\members\\SearchMember.js",["183"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\transactions\\SearchTransaction.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\transactions\\TransactionsTable.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\pages\\Register.js",["184","185","186","187"],"import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport CODIGO_HTTP from '../../utils/Utils'\r\nimport swal from 'sweetalert';\r\n\r\nconst Register = () => {\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [fieldRequireds, setFieldRequireds] = useState(true);\r\n\r\n    const [member, setMember] = useState({ \r\n        nombre: \"\",\r\n        apellido: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        fecha_de_nacimiento: \"\",\r\n        comentario: \"\",\r\n        permiso: \"\"\r\n    });\r\n  \r\n    const cleanForm = () => { setMember({      \r\n      nombre: \"\",\r\n      apellido: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      fecha_de_nacimiento: \"\",\r\n      comentario: \"\",\r\n      permiso: \"\"\r\n    })}\r\n  \r\n    const toggle = () => {\r\n        cleanForm();\r\n        setModal(!modal);\r\n    }\r\n\r\n    const handleSubmitRegister = (event) => {\r\n            doRegister(event)\r\n      }\r\n\r\n      const checkFieldsRequired = () => {\r\n        if (!nombre) {\r\n            setFieldRequireds(false)\r\n            return swal(\"Error\", \"Campo nombre es requerido\", \"error\")\r\n\r\n        }\r\n        if (!apellido) {\r\n            setFieldRequireds(false)\r\n            return swal(\"Error\", \"Campo apellido es requerido\", \"error\")\r\n          \r\n        }\r\n        if (!email) {\r\n            setFieldRequireds(false)\r\n            return swal(\"Error\", \"Campo email es requerido\", \"error\")\r\n        }\r\n            \r\n        if (!password) {\r\n            setFieldRequireds(false)\r\n            return swal(\"Error\", \"Campo password es requerido\", \"error\")\r\n        }\r\n        return setFieldRequireds(true)\r\n      }\r\n\r\n      const doRegister = async (event) => {\r\n        event.preventDefault();\r\n        console.log(\"REGISTER\")\r\n        let response = await fetch('http://localhost:5000/register', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(member)\r\n        });\r\n          console.log(JSON.stringify(member))\r\n          response = await response.json();\r\n          console.log(response)\r\n          if (response.code == CODIGO_HTTP.CREATED) {\r\n              swal(\"Bien!\", \"Ya estás inscripto como miembro\", \"success\")\r\n              .then(() => {toggle()})\r\n          } else {\r\n              swal(\"Error\", response.mensaje, \"error\")\r\n          }\r\n    }\r\n\r\n    const { nombre, apellido, email, password, fecha_de_nacimiento} = member;\r\n    \r\n    const onInputChange = e => {\r\n          setMember({...member, [e.target.name]: e.target.value})\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <a class=\"small\" onClick={toggle}>Registrate aquí!</a>\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n            <Form id=\"formAddMember\" onSubmit={handleSubmitRegister}>\r\n                <ModalHeader toggle={toggle}>Crea tu usuario</ModalHeader>\r\n                <ModalBody>\r\n                        <FormGroup>\r\n                            <Label for=\"memberName\">Nombre</Label>\r\n                            <Input type=\"text\" id=\"memberName\" name=\"nombre\" placeholder=\"Nombre\" value={nombre} onChange={e => onInputChange(e)} required />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"memberLastName\">Appellido</Label>\r\n                            <Input type=\"text\" id=\"memberLastName\" name=\"apellido\" placeholder=\"Apellido\" value={apellido} onChange={e => onInputChange(e)} required />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"memberEmail\">Email</Label>\r\n                            <Input type=\"text\" id=\"memberEmail\" name=\"email\" placeholder=\"Email\" value={email} onChange={e => onInputChange(e)} required />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"memberPassword\">Password</Label>\r\n                            <Input type=\"password\" id=\"memberPassword\" name=\"password\" placeholder=\"Contraseña\" value={password} onChange={e => onInputChange(e)} required />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"memberBirthDate\">Fecha de Nacimiento</Label>\r\n                            <Input type=\"date\" id=\"memberBirthDate\" name=\"fecha_de_nacimiento\" value={fecha_de_nacimiento} onChange={e => onInputChange(e)} />\r\n                        </FormGroup>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"submit\">Aceptar</Button>\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\products\\Producto.js",["188"],"import React from 'react';\r\nimport Canje from '../canje/Canje';\r\nimport DeleteProduct from './DeleteProduct';\r\n\r\nconst Producto = (props) => {\r\n\r\n    const { id, nombre, urlImage, puntos, descripcion } = props.producto\r\n    return (\r\n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n            <div className=\"card\">\r\n                <img src={urlImage} className=\"card-img-top\" />\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{nombre}</p>\r\n                    <p className=\"card-text\">{descripcion}</p>\r\n                    <p className=\"card-text\">{puntos} Puntos</p>\r\n                    <Canje \r\n                        productId={id}\r\n                        puntos={puntos} />\r\n                        <p></p>\r\n                    <DeleteProduct \r\n                        productId={id}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Producto;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\transactions\\AddTransaction.js",["189","190","191","192","193","194","195"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CODIGO_HTTP from '../../utils/Utils';\r\nimport swal from 'sweetalert';\r\n\r\nconst AddTransaction = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [members, setMembers] = useState([])\r\n\r\n    const [products, setProducts] = useState([])\r\n  \r\n    useEffect(() => {\r\n      if (!localStorage.getItem('token')) {\r\n        return history.push('/login'); }\r\n    else {\r\n        getMembers();\r\n        getProducts();\r\n        console.log(\"Miembros: \", members)\r\n        } }, [])\r\n  \r\n    const [modal, setModal] = useState(false);\r\n  \r\n    const [transaction, setTransaction] = useState({ \r\n        tipo: \"\",\r\n        monto: \"\",\r\n        id_miembro: \"\",\r\n        descripcion: \"\",\r\n        puntos: \"\",\r\n        id_producto: \"\"\r\n    });\r\n  \r\n    const cleanForm = () => { setTransaction({      \r\n        tipo: \"\",\r\n        monto: \"\",\r\n        id_miembro: \"\",\r\n        descripcion: \"\",\r\n        puntos: \"\",\r\n        id_producto: \"\"\r\n    })}\r\n\r\n    const getMembers = async () => {\r\n        let response = await fetch('http://localhost:5000/members', {\r\n            method: \"GET\"\r\n        });\r\n\r\n        response = await response.json();\r\n        console.log(\"Response: \", response);\r\n        setMembers(response.miembros);\r\n    }\r\n\r\n    const getProducts = async () => {\r\n        let response = await fetch('http://localhost:5000/products', {\r\n            method: \"GET\"\r\n        });\r\n        response = await response.json();\r\n        console.log(\"Response: \", response);\r\n        setProducts(response.productos);\r\n    }\r\n  \r\n    const toggle = () => {\r\n        cleanForm();\r\n        setModal(!modal);\r\n    }\r\n    \r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const fieldsOk = await checkFieldsRequireds()\r\n        if (fieldsOk) {\r\n        generateTransaction().then(transaccion => { toggle();\r\n                    console.log(transaccion)\r\n                   getMember(transaccion).then(\r\n                       member => {updateMemberPoints(member, transaccion).then(() => swal(\"Bien!\", \"Se ha generado la transacción con éxito\", \"success\").then(() => window.location.reload()) )})\r\n            })\r\n        } else {\r\n            swal(\"Error\", \"Tipo Acumulo: Complete el monto \\n Tipo Canje: Complete el producto\", \"error\")\r\n        }\r\n    } \r\n\r\n    const checkFieldsRequireds = async () => {\r\n        if (!tipo) {\r\n            return false\r\n        } \r\n        if (tipo == \"Acumulo\" && monto == \"\") {\r\n            return false\r\n        } \r\n        if (tipo == \"Canje\" && id_producto == \"\") {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n  const getMember = async (transaccion) => {\r\n      console.log(transaccion)\r\n      var id_miembro = transaccion.miembro.id\r\n    console.log(id_miembro)\r\n    let response = await fetch(`http://localhost:5000/members/${id_miembro}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }})\r\n        response = await response.json();\r\n        if (response.code == CODIGO_HTTP.OK) {\r\n            console.log(\"Miembro filtrado: \", response.miembro)\r\n            return response.miembro\r\n        } else {\r\n            swal(\"Error\", response.mensaje, \"error\")\r\n        }\r\n}\r\n\r\n    const generateTransaction = async () => {\r\n        let response = await fetch('http://localhost:5000/transactions', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(transaction)\r\n    })\r\n        console.log(JSON.stringify(transaction))\r\n        response = await response.json();\r\n        console.log(response)\r\n        if (response.code == CODIGO_HTTP.CREATED) {\r\n            return response.transaccion \r\n        } else {\r\n            swal(\"Error\", \"No se pudo crear la tranacción\", \"error\")\r\n        }   \r\n    }\r\n\r\n    const updateMemberPoints = async (member, transaction) => {\r\n        console.log(\"Puntos para actualizar: \", transaction.puntos)\r\n\r\n        var payload = {\r\n            nombre: member.nombre,\r\n            apellido: member.apellido,\r\n            email: member.email,\r\n            fecha_de_nacimiento: member.fecha_de_nacimiento,\r\n            estado: member.estado,\r\n            comentario: member.comentario,\r\n            puntos: member.puntos + transaction.puntos\r\n        }\r\n        console.log(payload)\r\n        let response = await fetch(`http://localhost:5000/members/${member.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)})\r\n\r\n        console.log(JSON.stringify(payload))\r\n        console.log(JSON.stringify(response))\r\n    }\r\n    \r\n    const { tipo, monto, id_miembro, id_producto, descripcion } = transaction;\r\n      \r\n    const onInputChange = e => {\r\n        setTransaction({...transaction, [e.target.name]: e.target.value})\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"btn btn-primary btn-add\" color=\"btn btn-primary\" onClick={toggle}>Crear Transacción</Button>\r\n            <Modal isOpen={modal}>\r\n            <Form id=\"formAddTransaction\" onSubmit={handleSubmit}>\r\n                <ModalHeader>Crear Transacción</ModalHeader>\r\n                <ModalBody>\r\n                        <FormGroup>\r\n                            <Label for=\"txtType\">Tipo</Label>\r\n                            <Input type=\"select\" id=\"txtType\" name=\"tipo\" placeholder=\"Tipo de transacción\" value={tipo} onChange={e => onInputChange(e)} required>\r\n                                <option value=\"\">Elige una opción</option>\r\n                                <option value=\"Acumulo\">Acumulo</option>\r\n                                <option value=\"Canje\">Canje</option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"txtAmount\">Monto</Label>\r\n                            <Input type=\"text\" id=\"txtAmount\" name=\"monto\" placeholder=\"Monto de transacción\" value={monto} onChange={e => onInputChange(e)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"txtMember\">Miembro</Label>\r\n                            <Input type=\"select\" id=\"txtMember\" name=\"id_miembro\" placeholder=\"Miembro de transacción\" value={id_miembro} onChange={e => onInputChange(e)} required >\r\n                                <option value=\"\">Elige una opción</option>\r\n                                {members.map((member) => (<option value={member.id}>{member.nombre} {member.apellido}</option>))}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"txtProduct\">Producto</Label>\r\n                            <Input type=\"select\" id=\"txtProduct\" name=\"id_producto\" placeholder=\"Producto de transacción\" value={id_producto} onChange={e => onInputChange(e)} >\r\n                                <option value=\"\">Elige una opción</option>\r\n                                {products.map((product) => (<option value={product.id}>{product.nombre}</option>))}\r\n                            </Input>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"txtDescription\">Descripción</Label>\r\n                            <Input type=\"textbox\" id=\"txtDescription\" name=\"descripcion\" placeholder=\"Descripción de transacción\" value={descripcion} onChange={e => onInputChange(e)} />\r\n                        </FormGroup>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"submit\">Aceptar</Button>\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTransaction;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\vouchers\\VouchersTable.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\utils\\Utils.js",[],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\canje\\Canje.js",["196","197"],"import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport swal from 'sweetalert';\r\nimport jwt_decode from 'jwt-decode';\r\nimport CODIGO_HTTP from '../../utils/Utils'\r\n\r\nconst Canje = (props) => {\r\n\r\n    const { productId, puntos } = props\r\n\r\n    const trade = async () => {\r\n        var token = localStorage.getItem('token')\r\n        var decoded = jwt_decode(token);\r\n\r\n        getMember(decoded.email).then(r => {\r\n        console.log(r)\r\n        if (checkPoints(r.puntos)) {\r\n            generateTradeTransaction(r.id).then(trx => {\r\n                updateMemberPoints(r)\r\n                generateMemberVoucher(r).then(voucher => { \r\n                    console.log(voucher)\r\n                    swal(\"¡El canje se ha realizado con éxito!\", `Se generó el voucher con número: ${voucher.id} \\n Se restaron: ${puntos} puntos`, \"success\") }\r\n            )})\r\n        } else {\r\n            swal(\"Error\", \"No tiene los puntos suficientes para poder canjear\", \"error\")\r\n        }\r\n        });\r\n    }\r\n\r\n    const getMember = async (email) => {\r\n        console.log(email)\r\n        let response = await fetch(`http://localhost:5000/members?email=${email}`, {\r\n            method: \"GET\"\r\n          });\r\n            response = await response.json();\r\n            console.log(response)\r\n            if (response.code == CODIGO_HTTP.OK) {\r\n                console.log(\"Miembro filtrado: \", response.miembros[0])\r\n                return response.miembros[0]\r\n            } else {\r\n                swal(\"Error\", response.mensaje, \"error\")\r\n            }\r\n    }\r\n\r\n    const checkPoints = (puntosMiembro) => {\r\n        console.log(puntosMiembro)\r\n        console.log(puntos)\r\n        if (puntosMiembro > 0 && puntosMiembro >= puntos) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const generateTradeTransaction = async (id_miembro) => {\r\n        var payload = {\r\n            id_miembro,\r\n            puntos,\r\n            tipo: \"Canje\",\r\n            descripcion: \"Transacción generada automaticamente por canje de producto\",\r\n            monto: 0,\r\n            id_producto: productId\r\n        }\r\n        \r\n        console.log(payload)\r\n        let response = await fetch('http://localhost:5000/transactions', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)})\r\n\r\n        console.log(JSON.stringify(payload))\r\n        console.log(response)\r\n    }\r\n\r\n    const updateMemberPoints = async (member) => {\r\n        var puntosParaActualizar = member.puntos - puntos\r\n        console.log(\"Puntos para actualizar: \", puntosParaActualizar)\r\n        var payload = {\r\n            nombre: member.nombre,\r\n            apellido: member.apellido,\r\n            email: member.email,\r\n            fecha_de_nacimiento: member.fecha_de_nacimiento,\r\n            estado: member.estado,\r\n            comentario: member.comentario,\r\n            puntos: puntosParaActualizar\r\n        }\r\n        console.log(payload)\r\n        let response = await fetch(`http://localhost:5000/members/${member.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)})\r\n\r\n        console.log(JSON.stringify(payload))\r\n        console.log(JSON.stringify(response))\r\n    }\r\n\r\n    const generateMemberVoucher = async (member) => {\r\n        var payload = {\r\n            id_producto: productId,\r\n            id_miembro: member.id \r\n        }\r\n        console.log(\"Member de voucher\", member)\r\n        console.log(\"Payload de Crear Voucher: \", payload)\r\n\r\n        let response = await fetch('http://localhost:5000/vouchers', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)})\r\n        response = await response.json();\r\n\r\n        if (response.code == CODIGO_HTTP.CREATED) {\r\n            return response.voucher\r\n        } else {\r\n            swal(\"Error\", response.mensaje, \"error\")\r\n        }\r\n    }\r\n\r\n    const toggle = () => {\r\n        swal({\r\n            title: \"¿Estás seguro?\",\r\n            text: \"Una vez canjeado, no se podrán devolver los puntos\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n          })\r\n          .then((willTrade) => {\r\n            if (willTrade) {\r\n                trade()\r\n            }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"btn btn-primary btn-block\" color=\"btn-primary\" onClick={toggle}>Canjear</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Canje;","C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\products\\AddProduct.js",["198"],"C:\\Users\\Ponte\\Documents\\Proyecto Final Python\\inspire\\inspire-frontend\\src\\components\\products\\DeleteProduct.js",["199"],"import React from 'react';\r\nimport swal from 'sweetalert';\r\nimport CODIGO_HTTP from '../../utils/Utils'\r\nimport { Button } from 'reactstrap';\r\n\r\nconst DeleteProduct = (props) => {\r\n    \r\n    const { productId } = props\r\n\r\n    const deleteProduct = async () => {\r\n        let response = await fetch(`http://localhost:5000/products/${productId}`, {\r\n            method: \"DELETE\",\r\n        });\r\n        response = await response.json();\r\n        if (response.code == CODIGO_HTTP.OK) {\r\n            swal(\"Bien!\", \"Producto eliminado con éxito!\", \"success\").then(() => window.location.reload());\r\n        } else {\r\n            swal(\"Error\", response.mensaje, \"error\")\r\n        }\r\n    }\r\n\r\n    const toggle = () => {\r\n        swal({\r\n            title: \"¿Estás seguro?\",\r\n            text: \"Una vez eliminado, no se podrá recuperar el producto\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n          })\r\n          .then((willDelete) => {\r\n            if (willDelete) {\r\n                deleteProduct()\r\n            }\r\n          });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <Button className=\"btn btn-primary btn-block\" color=\"danger\" onClick={toggle}>Eliminar</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeleteProduct;",{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":13,"column":21,"nodeType":"206","endLine":13,"endColumn":107},{"ruleId":"204","severity":1,"message":"205","line":17,"column":21,"nodeType":"206","endLine":17,"endColumn":113},{"ruleId":"204","severity":1,"message":"205","line":19,"column":25,"nodeType":"206","endLine":19,"endColumn":116},{"ruleId":"204","severity":1,"message":"205","line":20,"column":25,"nodeType":"206","endLine":20,"endColumn":113},{"ruleId":"204","severity":1,"message":"205","line":23,"column":25,"nodeType":"206","endLine":23,"endColumn":124},{"ruleId":"207","severity":1,"message":"208","line":24,"column":12,"nodeType":"209","messageId":"210","endLine":24,"endColumn":31},{"ruleId":"207","severity":1,"message":"211","line":26,"column":11,"nodeType":"209","messageId":"210","endLine":26,"endColumn":20},{"ruleId":"212","severity":1,"message":"213","line":36,"column":42,"nodeType":"214","messageId":"215","endLine":36,"endColumn":44},{"ruleId":"216","severity":1,"message":"217","line":42,"column":8,"nodeType":"218","endLine":42,"endColumn":10,"suggestions":"219"},{"ruleId":"212","severity":1,"message":"213","line":79,"column":31,"nodeType":"214","messageId":"215","endLine":79,"endColumn":33},{"ruleId":"212","severity":1,"message":"213","line":27,"column":38,"nodeType":"214","messageId":"215","endLine":27,"endColumn":40},{"ruleId":"216","severity":1,"message":"220","line":33,"column":8,"nodeType":"218","endLine":33,"endColumn":10,"suggestions":"221"},{"ruleId":"212","severity":1,"message":"213","line":61,"column":39,"nodeType":"214","messageId":"215","endLine":61,"endColumn":41},{"ruleId":"222","severity":1,"message":"223","line":84,"column":51,"nodeType":"224","messageId":"225","endLine":84,"endColumn":53},{"ruleId":"212","severity":1,"message":"213","line":27,"column":27,"nodeType":"214","messageId":"215","endLine":27,"endColumn":29},{"ruleId":"212","severity":1,"message":"213","line":39,"column":32,"nodeType":"214","messageId":"215","endLine":39,"endColumn":34},{"ruleId":"216","severity":1,"message":"220","line":55,"column":8,"nodeType":"218","endLine":55,"endColumn":10,"suggestions":"226"},{"ruleId":"216","severity":1,"message":"220","line":13,"column":42,"nodeType":"218","endLine":13,"endColumn":44,"suggestions":"227"},{"ruleId":"207","severity":1,"message":"228","line":41,"column":9,"nodeType":"209","messageId":"210","endLine":41,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":53,"column":23,"nodeType":"214","messageId":"215","endLine":53,"endColumn":25},{"ruleId":"212","severity":1,"message":"213","line":80,"column":23,"nodeType":"214","messageId":"215","endLine":80,"endColumn":25},{"ruleId":"216","severity":1,"message":"229","line":23,"column":8,"nodeType":"218","endLine":23,"endColumn":10,"suggestions":"230"},{"ruleId":"212","severity":1,"message":"213","line":50,"column":27,"nodeType":"214","messageId":"215","endLine":50,"endColumn":29},{"ruleId":"207","severity":1,"message":"231","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":25},{"ruleId":"212","severity":1,"message":"213","line":29,"column":38,"nodeType":"214","messageId":"215","endLine":29,"endColumn":40},{"ruleId":"216","severity":1,"message":"220","line":36,"column":8,"nodeType":"218","endLine":36,"endColumn":10,"suggestions":"232"},{"ruleId":"222","severity":1,"message":"223","line":70,"column":68,"nodeType":"224","messageId":"225","endLine":70,"endColumn":70},{"ruleId":"212","severity":1,"message":"213","line":25,"column":38,"nodeType":"214","messageId":"215","endLine":25,"endColumn":40},{"ruleId":"216","severity":1,"message":"220","line":31,"column":8,"nodeType":"218","endLine":31,"endColumn":10,"suggestions":"233"},{"ruleId":"222","severity":1,"message":"223","line":64,"column":56,"nodeType":"224","messageId":"225","endLine":64,"endColumn":58},{"ruleId":"212","severity":1,"message":"213","line":28,"column":38,"nodeType":"214","messageId":"215","endLine":28,"endColumn":40},{"ruleId":"216","severity":1,"message":"234","line":34,"column":8,"nodeType":"218","endLine":34,"endColumn":10,"suggestions":"235"},{"ruleId":"212","severity":1,"message":"213","line":42,"column":27,"nodeType":"214","messageId":"215","endLine":42,"endColumn":29},{"ruleId":"212","severity":1,"message":"213","line":63,"column":27,"nodeType":"214","messageId":"215","endLine":63,"endColumn":29},{"ruleId":"212","severity":1,"message":"236","line":69,"column":49,"nodeType":"214","messageId":"215","endLine":69,"endColumn":51},{"ruleId":"212","severity":1,"message":"213","line":28,"column":38,"nodeType":"214","messageId":"215","endLine":28,"endColumn":40},{"ruleId":"216","severity":1,"message":"220","line":33,"column":8,"nodeType":"218","endLine":33,"endColumn":10,"suggestions":"237"},{"ruleId":"222","severity":1,"message":"223","line":59,"column":56,"nodeType":"224","messageId":"225","endLine":59,"endColumn":58},{"ruleId":"212","severity":1,"message":"213","line":27,"column":42,"nodeType":"214","messageId":"215","endLine":27,"endColumn":44},{"ruleId":"216","severity":1,"message":"238","line":33,"column":8,"nodeType":"218","endLine":33,"endColumn":10,"suggestions":"239"},{"ruleId":"212","severity":1,"message":"213","line":41,"column":27,"nodeType":"214","messageId":"215","endLine":41,"endColumn":29},{"ruleId":"212","severity":1,"message":"213","line":65,"column":27,"nodeType":"214","messageId":"215","endLine":65,"endColumn":29},{"ruleId":"212","severity":1,"message":"236","line":72,"column":45,"nodeType":"214","messageId":"215","endLine":72,"endColumn":47},{"ruleId":"216","severity":1,"message":"240","line":12,"column":7,"nodeType":"218","endLine":12,"endColumn":9,"suggestions":"241"},{"ruleId":"216","severity":1,"message":"240","line":12,"column":7,"nodeType":"218","endLine":12,"endColumn":9,"suggestions":"242"},{"ruleId":"216","severity":1,"message":"240","line":12,"column":7,"nodeType":"218","endLine":12,"endColumn":9,"suggestions":"243"},{"ruleId":"207","severity":1,"message":"244","line":1,"column":46,"nodeType":"209","messageId":"210","endLine":1,"endColumn":61},{"ruleId":"207","severity":1,"message":"245","line":10,"column":12,"nodeType":"209","messageId":"210","endLine":10,"endColumn":26},{"ruleId":"207","severity":1,"message":"246","line":41,"column":13,"nodeType":"209","messageId":"210","endLine":41,"endColumn":32},{"ruleId":"212","severity":1,"message":"213","line":77,"column":29,"nodeType":"214","messageId":"215","endLine":77,"endColumn":31},{"ruleId":"247","severity":1,"message":"248","line":93,"column":13,"nodeType":"206","endLine":93,"endColumn":47},{"ruleId":"204","severity":1,"message":"205","line":11,"column":17,"nodeType":"206","endLine":11,"endColumn":64},{"ruleId":"216","severity":1,"message":"249","line":22,"column":14,"nodeType":"218","endLine":22,"endColumn":16,"suggestions":"250"},{"ruleId":"212","severity":1,"message":"213","line":87,"column":18,"nodeType":"214","messageId":"215","endLine":87,"endColumn":20},{"ruleId":"212","severity":1,"message":"213","line":87,"column":40,"nodeType":"214","messageId":"215","endLine":87,"endColumn":42},{"ruleId":"212","severity":1,"message":"213","line":90,"column":18,"nodeType":"214","messageId":"215","endLine":90,"endColumn":20},{"ruleId":"212","severity":1,"message":"213","line":90,"column":44,"nodeType":"214","messageId":"215","endLine":90,"endColumn":46},{"ruleId":"212","severity":1,"message":"213","line":106,"column":27,"nodeType":"214","messageId":"215","endLine":106,"endColumn":29},{"ruleId":"212","severity":1,"message":"213","line":125,"column":27,"nodeType":"214","messageId":"215","endLine":125,"endColumn":29},{"ruleId":"212","severity":1,"message":"213","line":37,"column":31,"nodeType":"214","messageId":"215","endLine":37,"endColumn":33},{"ruleId":"212","severity":1,"message":"213","line":117,"column":27,"nodeType":"214","messageId":"215","endLine":117,"endColumn":29},{"ruleId":"212","severity":1,"message":"213","line":31,"column":31,"nodeType":"214","messageId":"215","endLine":31,"endColumn":33},{"ruleId":"212","severity":1,"message":"213","line":15,"column":27,"nodeType":"214","messageId":"215","endLine":15,"endColumn":29},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'emailOriginalMember' is assigned a value but never used.","Identifier","unusedVar","'cleanForm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'loadMember'. Either include them or remove the dependency array.","ArrayExpression",["253"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["254"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["255"],["256"],"'onSubmit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'verifyRoute'. Either include it or remove the dependency array.",["257"],"'SearchTransaction' is defined but never used.",["258"],["259"],"React Hook useEffect has missing dependencies: 'history', 'loadTransactionAdmin', and 'loadTransactionUser'. Either include them or remove the dependency array.",["260"],"Expected '!==' and instead saw '!='.",["261"],"React Hook useEffect has missing dependencies: 'history', 'loadVoucherAdmin', and 'loadVoucherUser'. Either include them or remove the dependency array.",["262"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["263"],["264"],["265"],"'useLayoutEffect' is defined but never used.","'fieldRequireds' is assigned a value but never used.","'checkFieldsRequired' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'history' and 'members'. Either include them or remove the dependency array.",["266"],"no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"269","fix":"271"},{"desc":"269","fix":"272"},{"desc":"273","fix":"274"},{"desc":"269","fix":"275"},{"desc":"269","fix":"276"},{"desc":"277","fix":"278"},{"desc":"269","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},{"desc":"282","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [history, loadMember]",{"range":"288","text":"289"},"Update the dependencies array to be: [history]",{"range":"290","text":"291"},{"range":"292","text":"291"},{"range":"293","text":"291"},"Update the dependencies array to be: [verifyRoute]",{"range":"294","text":"295"},{"range":"296","text":"291"},{"range":"297","text":"291"},"Update the dependencies array to be: [history, loadTransactionAdmin, loadTransactionUser]",{"range":"298","text":"299"},{"range":"300","text":"291"},"Update the dependencies array to be: [history, loadVoucherAdmin, loadVoucherUser]",{"range":"301","text":"302"},"Update the dependencies array to be: [id]",{"range":"303","text":"304"},{"range":"305","text":"304"},{"range":"306","text":"304"},"Update the dependencies array to be: [history, members]",{"range":"307","text":"308"},[1394,1396],"[history, loadMember]",[1024,1026],"[history]",[1772,1774],[458,460],[653,655],"[verifyRoute]",[1173,1175],[952,954],[1042,1044],"[history, loadTransactionAdmin, loadTransactionUser]",[984,986],[1060,1062],"[history, loadVoucherAdmin, loadVoucherUser]",[307,309],"[id]",[314,316],[286,288],[693,695],"[history, members]"]